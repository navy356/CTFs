global
    lua-load /usr/local/share/lua/5.3/jwtverify.lua
    lua-load /tmp/haproxy/eth.lua 
    
    setenv OAUTH_ISSUER accounts.google.com
    setenv OAUTH_PUBKEY_PATH /tmp/haproxy/oauth_pubkey.pem
    setenv GEN_URL unix@nginx.socket:0/api/genaddr

    
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    # daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats
   
    
userlist haproxy-dataplaneapi
    user admin insecure-password "${DATAPLANE_PASSWD}"
    
program api
   command /usr/bin/dataplaneapi --scheme=unix --socket-path=/var/lib/haproxy/socket/dataplane.sock --haproxy-bin /usr/sbin/haproxy --config-file /usr/local/etc/haproxy/haproxy.cfg --reload-cmd "/tmp/haproxy/reload.sh" --reload-delay 5 --userlist haproxy-dataplaneapi
   no option start-on-reload

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

backend paymeflare.2021.ctfcompetition.com
   balance roundrobin
   mode http
   server web1 unix@nginx.socket check

backend paymeflare-web.2021.ctfcompetition.com
   balance roundrobin
   mode http
   server web1 unix@nginx.socket check

frontend http
  bind *:1337
  bind *:80
  mode http


  acl is_checkout path_dir checkout
  acl is_api path_beg /api
  acl has_auth req.hdr(authorization) -m found
  acl is_auth var(txn.authorized) -m bool


  http-request lua.gen_addr if is_checkout
  http-request set-header X-Wallet %[var(txn.wallet)] if is_checkout

  http-request lua.jwtverify if has_auth
  http-request deny if is_api has_auth ! is_auth

  http-request set-var(req.secret) env(PAYMEFLARE_KEY),base64
  http-request set-header X-Pay %[req.hdr(host),lower,word(1,:),hmac(sha256,req.secret),hex,lower]


  use_backend %[req.hdr(host),lower,word(1,:)]

  default_backend paymeflare.2021.ctfcompetition.com

  
